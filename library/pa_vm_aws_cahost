#!/usr/bin/python
import sys

try:
    import pan.xapi
except ImportError:
    print "failed=True msg='pan-python required for this module'"
    sys.exit(1)

_CUSTOM_APP_XPATH = "/config/devices/entry[@name='localhost.localdomain']/vsys/entry[@name='vsys1']/application/entry[@name='%s']"

_CUSTOM_APP_TEMPLATE = """<default><port><member>tcp/80</member></port></default>
<signature>
<entry name="%s">
<and-condition>
<entry name="And Condition 1">
<or-condition>
<entry name="Or Condition 1">
<operator>
<pattern-match>
<pattern>
%s
</pattern>
<context>http-req-host-header</context>
</pattern-match>
</operator>
</entry>
</or-condition>
</entry>
</and-condition>
<scope>protocol-data-unit</scope>
<order-free>no</order-free>
</entry>
</signature>
<subcategory>web-posting</subcategory>
<category>collaboration</category>
<technology>browser-based</technology>
<risk>1</risk>
<able-to-transfer-file>yes</able-to-transfer-file>
<has-known-vulnerability>yes</has-known-vulnerability>
<file-type-ident>yes</file-type-ident>
<virus-ident>yes</virus-ident>
<parent-app>web-browsing</parent-app>
"""

def custom_app_exists(xapi, app_name):
    xapi.get(_CUSTOM_APP_XPATH%app_name)
    e = xapi.element_root.find('.//entry')
    if e is None:
        return False
    return True

def add_custom_app(xapi, app_name, host_regex):
    if custom_app_exists(xapi, app_name):
        return False

    xapi.set(xpath=_CUSTOM_APP_XPATH%app_name, element=_CUSTOM_APP_TEMPLATE%(app_name, host_regex))

    return True

def main():
    argument_spec = dict(
            ip_address=dict(default=None),
            password=dict(default=None),
            username=dict(default='admin'),
            app_name=dict(default=None),
            host_regex=dict(default=None)
        )
    module = AnsibleModule(argument_spec=argument_spec)

    ip_address = module.params["ip_address"]
    if not ip_address:
        module.fail_json(msg="ip_address should be specified")
    password = module.params["password"]
    if not password:
        module.fail_json(msg="password is required")
    username = module.params['username']

    xapi = pan.xapi.PanXapi(hostname=ip_address, api_username=username, api_password=password)

    app_name = module.params['app_name']
    if not app_name:
        module.fail_json(msg='app_name is required')
    host_regex = module.params['host_regex']
    if not host_regex:
        module.fail_json(msg='host_regex is required')

    changed = add_custom_app(xapi, app_name, host_regex)

    if changed:
        xapi.commit(cmd="<commit></commit>", sync=True, interval=1)

    module.exit_json(changed=changed, msg="okey dokey")

from ansible.module_utils.basic import *
from ansible.module_utils.ec2 import *

main()
